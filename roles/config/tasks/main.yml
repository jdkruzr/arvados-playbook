---
# Configuring Arvados

- name: Setup update-alternatives for Py2
  shell: update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1

- name: Setup update alternatives for Py3
  shell: update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2

- name: Force python3
  community.general.alternatives:
    name: python
    path: /usr/bin/python3.6

- name: Create config directory for Arvados
  ansible.builtin.file:
    path: /etc/arvados
    state: directory
    mode: '0755'

- name: Add Arvados config file
  copy:
      dest: "/etc/arvados/config.yml"
      content: |
        Clusters:
          bwarv:
            SystemRootToken: "sy971y7fz2jSNUQzGkvfY76Ru6n8RLWLtXimH6X4c1IPXcRjtm"
            ManagementToken: "4XiPWhaIehRxNmNyidCfFyS9mddqnKt8gkbL75vxFrm8upX2T0"
            Collections:
              BlobSigningKey: "MrGs82b5uVylbOPFfnpBKVGK40XzW6YSnRu0fdiRqfoTNwbjSn"
            API:
              RailsSessionSecretToken: "ldUW2znvL0GOiJT6KgQLc0FF54ISkApHjfTkdzsyYsutbJB5jV"
            PostgreSQL:
              Connection:
                host: arvados-postgres
                user: arvados
                password: idontreallycaredou
                dbname: arvados_production
            Login:
              LDAP:
                Enable: true
                URL: ldap://pegasus.broken.wrx:389
                SearchBindUser: CN=arvadosman,CN=Users,DC=broken,DC=wrx
                SearchBindPassword: datasharingactivate1!
                SearchBase: CN=Users,DC=broken,DC=wrx
                StartTLS: false
                StripDomain: "broken.wrx"
                SearchAttribute: sAMAccountName
                SearchFilter: "(objectClass=user)"
                EmailAttribute: mail
                UsernameAttribute: sAMAccountName
            Users:
              # The e-mail address of the user you would like to become marked as an admin
              # user on their first login.
              AutoAdminUserWithEmail: "jtd@broken.wrx"
              AnonymousUserToken: "NPJn5SoVqb426CTOJqotfAONIj5AhCKC2vQSK4Bj"
            Services:
              Controller:
                ExternalURL: "https://bwarv.broken.works/"
                InternalURLs:
                  "http://arvados-api:8003": {}
              RailsAPI:
              # Does not have an ExternalURL
                InternalURLs:
                  "http://arvados-api:8004": {}
              Keepstore:
                # No ExternalURL because they are only accessed by the internal subnet.
                InternalURLs:
                  "http://arvados-keep0:25107": {}
              Keepproxy:
                ExternalURL: https://keep.bwarv.broken.works/
                InternalURLs:
                  "http://arvados-keep:25107": {}
              WebDAVDownload:
                ExternalURL: https://download.bwarv.broken.works/
              WebDAV:
                ExternalURL: https://*.collections.bwarv.broken.works/
                InternalURLs:
                  "https://arvados-keep:9002": {}
              Websocket:
                InternalURLs:
                  "https://arvados-ws:8005": {}
                ExternalURL: wws://ws.bwarv.broken.works/websocket
              Workbench1:
                ExternalURL: "https://workbench.bwarv.broken.works"
              Workbench2:
                ExternalURL: "https://workbench2.bwarv.broken.works"
            Workbench:
              SecretKeyBase: 182vioyyiqclf3wqyjkuaelbda6u8afmwkjgho62zo5sgrqporn9v6n3t91jka7ckrcdryshtgvh90
            Volumes:
              ClusterID-bwarv-000000000000000:
                AccessViaHosts:
                  "http://arvados-keep0:25107": {}
                Driver: Directory
                DriverParameters:
                  # The directory that will be used as the backing store.
                  Root: /mnt/arvadosdata

                # How much replication is performed by the underlying
                # filesystem.  (for example, a network filesystem may provide
                # its own replication).  This is used to inform replication
                # decisions at the Keep layer.
                Replication: 2

                # If true, do not accept write or trash operations, only
                # reads.
                ReadOnly: false

                # Storage classes to associate with this volume.
                StorageClasses: null
