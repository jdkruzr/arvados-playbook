---
# Installs and starts Postgres on container, creates user, db

- name: "Install Postgres"
  apt:
    name: "postgresql"
    state: present

- name: "Install Postgres-contrib"
  apt:
    name: "postgresql-contrib"
    state: present

- name: "Install libpq-dev"
  apt:
    name: "libpq-dev"
    state: present

- name: "Permit external connections in postgresql.conf"
  lineinfile:
    path: /etc/postgresql/12/main/postgresql.conf
    regexp: '^listen_addresses = '
    line: listen_addresses = '*'

- name: "Permit external connections in pg_hba.conf"
  copy:
      dest: /etc/postgresql/12/main/pg_hba.conf
      content: |
        local   all             postgres                                peer

        # TYPE  DATABASE        USER            ADDRESS                 METHOD

        # "local" is for Unix domain socket connections only
        local   all             all                                     peer
        # IPv4 local connections:
        host    all             all             127.0.0.1/32            md5
        # IPv6 local connections:
        host    all             all             ::1/128                 md5
        # Allow replication connections from localhost, by a user with the
        # replication privilege.
        local   replication     all                                     peer
        host    replication     all             127.0.0.1/32            md5
        host    replication     all             ::1/128                 md5
        host	all		all		0.0.0.0/0		md5
      
    
- name: "Enable and start Postgres"
  ansible.builtin.systemd:
    name: 'postgresql'
    enabled: yes
    state: started

- name: "Install psycopg2 for Ansible support"
  pip:
    name: 'psycopg2'

- name: "Set up DB user for Arvados"
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: 'arvados'
    password: idontreallycaredou
    role_attr_flags: NOSUPERUSER

- name: "Set up DB for Arvados"
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    name: 'arvados_production'
    template: template0
    encoding: UTF-8

- name: "Establish ownership for db"
  become: true
  become_user: postgres
  community.postgresql.postgresql_owner:
    db: 'arvados_production'
    new_owner: 'arvados'

- name: Adds pgtrm extension
  become: true
  become_user: postgres
  community.postgresql.postgresql_ext:
    name: pg_trgm
    db: arvados_production
