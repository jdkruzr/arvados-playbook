- name: "Install nginx on API host"
  apt:
    name: "nginx"
    state: present

- name: "Install Ruby on API host"
  apt:
    name: "ruby"
    state: present

- name: "Install Ruby dev package on API host"
  apt:
    name: "ruby-dev"
    state: present

- name: "Install Bundler on API host"
  apt:
    name: "bundler"
    state: present

- name: "Remove default nginx config"
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: "Install Passenger"
  apt:
    name: libnginx-mod-http-passenger
    state: present

- name: "Install Passenger conf"
  ansible.builtin.file:
    src: /usr/share/nginx/modules-available/mod-http-passenger.load
    dest: /etc/nginx/modules-enabled/50-mod-http-passenger.conf
    owner: www-data
    group: www-data
    state: link

- name: "Install postgresql-client"
  apt:
    name: "postgresql-client"
    state: present

- name: "Install git"
  apt:
    name: "git"
    state: present

- name: "Install ssl-cert"
  apt:
    name: "ssl-cert"
    state: present

- name: "Create snakeoil"
  command: make-ssl-cert generate-default-snakeoil --force-overwrite


- name: "Add Arvados nginx config file"
  template:
    dest: "/etc/nginx/conf.d/arvados-api-and-controller.conf"
    src: arvados-api-and-controller.conf.j2

- name: "Restart nginx"
  systemd:
    name: nginx
    daemon-reload: yes
    state: restarted

- name: "Install Arvados API server"
  apt:
    name: "arvados-api-server"
    state: present

- name: "Install Arvados controller"
  apt:
    name: "arvados-controller"
    state: present

- name: "Restart nginx again"
  systemd:
    name: nginx
    daemon-reload: yes
    state: restarted

- name: "Restart controller"
  systemd:
    name: arvados-controller
    state: restarted

- name: Add git user with a bash shell, correct homedir
  ansible.builtin.user:
    name: git
    shell: /bin/bash
    home: /var/lib/arvados/git
    state: present

- name: Create git user homedir
  ansible.builtin.file:
    path: /var/lib/arvados/git
    state: directory
    mode: '0755'
    owner: git
    group: git

- name: Create git user keypair dir
  ansible.builtin.file:
    path: /var/lib/arvados/git/.ssh
    state: directory
    mode: '0755'
    owner: git
    group: git

- name: Create git user git conf dir
  ansible.builtin.file:
    path: /var/lib/arvados/git/.git
    state: directory
    mode: '0755'
    owner: git
    group: git

- name: Generate keypair
  become: true
  become_user: git
  community.crypto.openssh_keypair:
    path: /var/lib/arvados/git/.ssh/id_rsa
  register: git_keypair_return

- name: Clone gitolite
  become: true
  become_user: git
  ansible.builtin.git:
    repo: 'https://github.com/sitaramc/gitolite'
    dest: /var/lib/arvados/git/gitolite
    version: v3.6.11

- name: Create bin directory
  ansible.builtin.file:
    path: /var/lib/arvados/git/bin
    owner: git
    group: git
    state: directory
    mode: '0755'

- name: Install git executable
  become: true
  become_user: git
  ansible.builtin.shell: /var/lib/arvados/git/gitolite/install -ln /var/lib/arvados/git/bin

- name: Set git path info
  become: true
  become_user: git
  ansible.builtin.shell: echo 'PATH=$HOME/bin:$PATH' > ~git/.profile

- name: Install arvados-dispatch-cloud
  apt:
    name: arvados-dispatch-cloud
    state: present

- name: "Don't actually enable and start cloud dispatch"
  ansible.builtin.systemd:
    name: 'arvados-dispatch-cloud'
    enabled: no
    state: stopped

#- name: copy ssh id
#  become: true
#  become_user: git
#  ansible.builtin.shell: ssh -o stricthostkeychecking=no localhost cat .ssh/id_rsa.pub

- name: delete authorized_keys so gitolite can do it
  become: true
  become_user: git
  ansible.builtin.shell: rm -rf ~/.ssh/authorized_keys

- name: gitolite setup
  become: true
  become_user: git
  ansible.builtin.shell: /var/lib/arvados/git/bin/gitolite setup -pk /var/lib/arvados/git/.ssh/id_rsa.pub

- name: Checkout admin repo
  become: true
  become_user: git
  ansible.builtin.git:
    repo: git@localhost:gitolite-admin
    dest: /var/lib/arvados/git/gitolite-admin

- name: more gitolite setup
  become: true
  become_user: git
  copy:
    dest: /var/lib/arvados/git/.git/config
    content: |
      [core]
      repositoryformatversion = 0
      filemode = true
      bare = false
      logallrefupdates = true
      [user]
      name = arvados
      email = arvados
      [push]
      default = simple

- name: still more gitolite setup
  become: true
  become_user: git
  copy:
    dest: ~git/.gitolite.rc
    content: |
      my $repo_aliases;
      my $aliases_src = "$ENV{HOME}/.gitolite/arvadosaliases.pl";
      if ($ENV{HOME} && (-e $aliases_src)) {
        $repo_aliases = do $aliases_src;
      }
      $repo_aliases ||= {};

      %RC = (

        REPO_ALIASES => $repo_aliases,
        UMASK                           =>  022,
        GIT_CONFIG_KEYS                 =>  '',
        LOG_EXTRA                       =>  1,
        ROLES => {
            READERS                     =>  1,
            WRITERS                     =>  1,
        },

        ENABLE => [
                'help',
                'desc',
                'info',
                'perms',
                'writable',
                'ssh-authkeys',
                'git-config',
                'daemon',
                'gitweb',
                'Alias',
        ],

      );

      1;

      # Local variables:
      # mode: perl
      # End:
      # vim: set syn=perl:

- name: even more gitolite setup
  become: true
  become_user: root
  copy:
    dest: /etc/cron.d/arvados-git-sync
    content: |
      */5 * * * * git cd /var/www/arvados-api/current && bundle exec script/arvados-git-sync.rb production

